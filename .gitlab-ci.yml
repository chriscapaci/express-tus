stages:
  - test
  - build
  - deploy
test:
  stage: test
  cache:
    untracked: true
    key: "$CI_BUILD_REF_NAME"
    paths:
      - node_modules/
  image: node:14
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
    - npm install
    - npm run lint
    - npm run test
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --build-arg=NPM_TOKEN --cache=true --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID.$CI_COMMIT_SHA
  only:
    - master@contrawork/contra-file-upload-api
# deploy:
#   stage: deploy
#   image:
#     name: alpine/helm:3.1.3
#     entrypoint: [""]
#   environment:
#     name: production
#     kubernetes:
#       namespace: default
#   script:
#     - set -x
#     - env
#     - helm upgrade cwcm-do-maintenance-tasks charts/contra-manager --values $DO_MAINTENANCE_TASKS_VALUES --set image.tag=$CI_PIPELINE_ID.$CI_COMMIT_SHA
#   only:
#     - master@contrawork/contra-file-upload-api
